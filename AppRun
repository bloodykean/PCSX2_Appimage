#!/bin/bash
HERE="$(dirname "$(readlink -f "${0}")")"
PCSX2_HOME="$HOME/.config/PCSX2"
HERE_LINK="$PCSX2_HOME/appimage_installation"
F11_APPIMAGE_TMP_DIR="$HERE"_tmp
F11_APPIMAGE_CONF_DIR="$HOME/.config/f11conf"
F11_APPIMAGE_VKCONF="$F11_APPIMAGE_CONF_DIR/vulkan.conf"
#===================================================================

make_dir() { [ ! -d "$1" ] && mkdir -p "$1"; };
#------------------------------

# Configure AppImage:
if [ "$1" = "f11conf" ] ; then
	echo "Init Configuration:"
	make_dir F11_APPIMAGE_CONF_DIR
	#like: pcsx2.appimage f11conf vulkan radeon:intel
	if [ "$2" = "vulkan" ] ; then
		cat > $F11_APPIMAGE_VKCONF << EOF
F11_VULKAN=$3
EOF
	fi
	echo "Configuration done! "
	exit 0
fi

# Create a tmp dir to some utils like vulkan (need one new, so remove the old):
if [ -d "$F11_APPIMAGE_TMP_DIR" ]; then
	rm -rf "$F11_APPIMAGE_TMP_DIR"
fi
mkdir "$F11_APPIMAGE_TMP_DIR"
#===================================================================

#Using (and updating) links to plugin path
make_dir "$PCSX2_HOME"
rm -rf "$HERE_LINK"
ln -s "$HERE" "$HERE_LINK"
#===================================================================

# If not extract and overwrite, $HERE/lib is a link to $HERE/usr/lib, that link to $HERE/usr/lib64
export LD_LIBRARY_PATH="$HERE_LINK/usr/lib":$LD_LIBRARY_PATH
export LD_LIBRARY_PATH="$HERE_LINK/usr/lib32":$LD_LIBRARY_PATH
export LD_LIBRARY_PATH="$HERE_LINK/lib":$LD_LIBRARY_PATH
#------------------------------

#Sound Library
export LD_LIBRARY_PATH="$HERE_LINK/usr/lib32/pulseaudio":$LD_LIBRARY_PATH
export LD_LIBRARY_PATH="$HERE_LINK/usr/lib32/alsa-lib":$LD_LIBRARY_PATH

# libGL drivers
export LIBGL_DRIVERS_PATH="$HERE_LINK/usr/lib32/dri":$LIBGL_DRIVERS_PATH

#Font Config
export FONTCONFIG_PATH="$HERE_LINK/etc/fonts":$FONTCONFIG_PATH

#LD
export LIB32LDLIBRARY="$HERE_LINK/usr/lib32/ld-linux.so.2"
#------------------------------

# GStreamer environment variables
export GST_REGISTRY_REUSE_PLUGIN_SCANNER="no"
export GST_PLUGIN_SYSTEM_PATH_1_0="${HERE_LINK}/usr/lib32/gstreamer-1.0/"

export GST_PLUGIN_SCANNER_1_0="${HERE_LINK}/usr/lib32/gstreamer-1.0/gst-plugin-scanner"
export GST_PTP_HELPER_1_0="${HERE_LINK}/usr/lib32/gstreamer-1.0/gst-ptp-helper"

export GST_PLUGIN_PATH=${GST_PLUGIN_SYSTEM_PATH_1_0}
export GST_PLUGIN_SYSTEM_PATH=${GST_PLUGIN_SYSTEM_PATH_1_0}
export GST_PLUGIN_SCANNER=${GST_PLUGIN_SCANNER_1_0}
#===================================================================

# For Vulkan drivers:
# Setting VK_ICD_FILENAMES... But the user can use his own variable for local drivers
if [ -n "$VK_ICD_FILENAMES" ]
then
	echo "Using user \$VK_ICD_FILENAMES: $VK_ICD_FILENAMES"
elif [ -f "$F11_APPIMAGE_VKCONF" ]; then
	. "$F11_APPIMAGE_VKCONF"
	
	IFS_TMP=$IFS
	IFS=:
	for driver in $F11_VULKAN do
		#echo "$driver"
		if [ "$driver" = "intel" ]; then
			export VK_ICD_FILENAMES="$VK_ICD_FILENAMES:$F11_APPIMAGE_TMP_DIR/intel_icd.i686.json"
			cat > $F11_APPIMAGE_TMP_DIR/intel_icd.i686.json << EOF
{
    "ICD": {
        "api_version": "1.1.102",
        "library_path": "$HERE/usr/lib32/libvulkan_intel.so"
    },
    "file_format_version": "1.0.0"
}
EOF
		elif [ "$driver" = "radeon" ]; then
			export VK_ICD_FILENAMES="$VK_ICD_FILENAMES:$F11_APPIMAGE_TMP_DIR/radeon_icd.i686.json"
			cat > $F11_APPIMAGE_TMP_DIR/radeon_icd.i686.json << EOF
{
    "ICD": {
        "api_version": "1.1.107",
        "library_path": "$HERE/usr/lib32/libvulkan_radeon.so"
    },
    "file_format_version": "1.0.0"
}
EOF
		else
			echo "ERROR: Driver \"$driver\" unsupported yet!!!"
		fi
	done
	
	IFS=$IFS_TMP
fi
#===================================================================

# Allow the AppImage to be symlinked to e.g., /usr/bin/glxinfo32 or /usr/bin/glxgears32
if [ -n "$APPIMAGE" ] ; then
	BINARY_NAME=$(basename "$ARGV0")
else
	BINARY_NAME=$(basename "$0")
fi

MAIN="$HERE_LINK/usr/bin/PCSX2"
if [ -n "$1" ] && [ -x "$HERE_LINK/bin/$1" ] ; then
	MAIN="$HERE_LINK/bin/$1" ; shift
elif [ -n "$1" ] && [ -x "$HERE_LINK/usr/bin/$1" ] ; then
	MAIN="$HERE_LINK/usr/bin/$1" ; shift
elif [ -x "$HERE_LINK/bin/$BINARY_NAME" ] ; then
	MAIN="$HERE_LINK/bin/$BINARY_NAME"
elif [ -x "$HERE_LINK/usr/bin/$BINARY_NAME" ] ; then
	MAIN="$HERE_LINK/usr/bin/$BINARY_NAME"
else
	MAIN="$HERE_LINK/usr/bin/PCSX2"
fi

# Exec outside apps with inside environment (make the link name "ExternalExec")
if [ "$BINARY_NAME" = "ExternalExec" ] && [ -n "$1" ] && [ -x "$1" ]; then
	MAIN="$1" ; shift
fi
#===================================================================

export PATH=$HERE_LINK/bin:$HERE_LINK/usr/bin:$PATH
export __GL_THREADED_OPTIMIZATIONS=1
$LIB32LDLIBRARY "$MAIN" "$@" | cat

#===================================================================

# clean tmp files:
rm -rf "$F11_APPIMAGE_TMP_DIR"
